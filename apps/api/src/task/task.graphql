enum TodoStatus {
    new
    canceled
    done
}

enum TaskPriority {
    low
    normal
    high
}

type Todo {
    id: ID!
    title: String
    content: String
    status: TodoStatus
}

type Task {
    id: ID!
    title: String
    todos: [Todo!]!
    priority: TaskPriority
}

type Query {
    getTasksList: [Task!]!
    getTodosList(taskId: ID!): [Todo!]!
}

type Mutation {
    task: TaskMutations
    todo: TodoMutations
}

type TaskResponse {
    task: Task
    error: String
}

type TodoResponse {
    todo: Todo
    error: String
}

input TodoInput {
    taskId: ID!
    title: String
    content: String
}

input TaskInput {
    title: String
    priority: String
}

type TaskMutations {
    addTask(task: TaskInput!): TaskResponse!
    delTask(taskId: ID!): TaskResponse!
    setTaskPriority(taskId: ID!, taskPriority: String!): TaskResponse!
}

type TodoMutations {
    addTodo(todo: TodoInput!): TodoResponse!
    delTodo(todoId: ID!): TodoResponse!
    setTodoStatus(todoId: ID!, todoStatus: String!): TodoResponse!
}
